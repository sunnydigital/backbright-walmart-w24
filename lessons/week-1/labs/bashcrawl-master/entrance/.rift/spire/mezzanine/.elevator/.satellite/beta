oZQpkdW5nZW9uLiAgWW91IGZpbmQgdGhlIGZvbGxvd2luZyBpdGVtcyBvbiB0aGUgY29ycHNlOiA
KCiR7SX0KCkVPRgogICAgY3Vycj0kKGJhc2VuYW1lICRQV0QpCiAgICB3aGlsZSBbICIkY3VyciI
gIT0gImVudHJhbmNlIiBdOyBkbwogICAgICAgIHB1c2hkIC4uICY+IC9kZXYvbnVsbAogICAgICA
gIGRpcnMgLWMKICAgICAgICBjdXJyPSQoYmFzZW5hbWUgJFBXRCkKICAgIGRvbmUKICAgIHVuc2V
0IEkKICAgIHVuc2V0IEhQCiAgICAkU0hFTEwKfQoKcmVzb2x2ZSgpIHsKICAgIGlmICEgZ3JlcCA
tLXF1aWV0IC0tb25seS1tYXRjaGluZyBzd29yZCA8PDwgJEk7IHRoZW4KICAgICAgICBsZXQgTlV
NPU5VTS01CiAgICBmaQogICAgaWYgW1sgJE1PTlNURVIgLWVxICROVU0gXV07IHRoZW4KICAgICA
gICBjYXQgPDwgRU9GCllvdSBkb2RnZSBhbiBhdHRhY2ssIGJ1dCB5b3UgbWlzcyB5b3VyIG1hcms
gYXMgYSByZXN1bHQuClJvbGwgYWdhaW4uLi4KCkVPRgoJcm9sbAogICAgZmkKICAgIAogICAgaWY
gW1sgJE1PTlNURVIgLWx0ICROVU0gXV07IHRoZW4KICAgICAgICBjYXQgPDwgRU9GCkEgaGl0ISB
BIHBhbHBhYmxlIGhpdCEgIFRoZSByb2JvdCBmYWxscyBiYWNrIHRvIHBpZWNlcy4KQmVmb3JlIGl
0IGRvZXMsIGEgc2Nyb2xsIGVtaW5hdGVzIGZyb20gd2hhdCBsb29rcyBsaWtlIGl0cwptb3V0aC4
KCkVPRgogICAgICAgY2F0IDw8IEVPRiA+IHNwZWxsIAogICAgICAgCklOQ1JFQVNFIFlPVVIgVkl
TSU9OISAgVGhlIHNwZWxsIHlvdSB1c2UgCnRvIGlsbHVtaW5hdGUgdGhpcyBwbGFjZSAoJ2xzJyk
gaGFzIG1hbnkgCm1vcmUgb3B0aW9ucyB0aGF0IGNhbiBhbHRlciB3aGF0IHlvdSAKc2VlLiAgVHJ
5IHRoZSBmb2xsb3dpbmcgaW5jYW50YXRpb246CgpscyAtYU